{"version":3,"sources":["App.js","ContactInfo.js","ContactDetail.js","contactCreate.js","Template.js","Contact.js","reportWebVitals.js","index.js"],"names":["Codelab","this","props","name","children","number","React","Component","defaultProps","ContactInfo","onClick","contact","ContactDetail","handleToggle","state","isEdit","handleEdit","setState","phone","handleChange","e","nextState","target","value","onEdit","handleKeyPress","charCode","edit","type","placeholder","onChange","onKeyPress","details","view","blank","isSelected","onRemove","console","error","ContactCreate","handleClick","onCreate","Template","styled","div","TemplateFunc","Contact","keyword","log","handleSelect","key","selectedKey","handleCreate","ContactData","update","$push","handelRemove","$splice","$set","data","sort","a","b","filter","toLowerCase","indexOf","map","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb9a37d8.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport propTypes from 'prop-types';\n\n\nclass Codelab extends React.Component {\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>\n\t\t\t\t\t{this.props.name}\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</h1>\n\t\t\t\t<h2>\n\t\t\t\t\t{this.props.number}\n\t\t\t\t</h2>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nCodelab.propTypes = {\n\tname: propTypes.string,\n\tnumber: propTypes.number.isRequired // 꼭 입력\n}\n\nCodelab.defaultProps = {\n\tname: 'unknown '\n}\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Codelab \n\t\t\t\tname = {this.props.name}\n\t\t\t\tnumber = {this.props.number}\n\t\t\t> \n\t\t\t\t{this.props.children} \n\t\t\t</Codelab>\n\t\t)\n\t}\n}\n\nclass Counter extends React.Component {\n\t// state 사용 위해서는 초기화 꼭 필요!\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tvalue: 0\n\t\t}\n\t}\n\n\tplusClick = (props) => {\n\t\tthis.setState({\n\t\t\tvalue: this.state.value + 1\n\t\t})\n\t}\n\n\tminusClick = (props) => {\n\t\tthis.setState({\n\t\t\tvalue: this.state.value + -1\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>\n\t\t\t\t\t{this.state.value}\n\t\t\t\t</h2>\n\t\t\t\t<button onClick = {this.plusClick}> + press</button>\n\t\t\t\t<button onClick = {this.minusClick}>- press</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport {App, Counter}","import React from 'react';\r\n\r\nexport default class ContactInfo extends React.Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div onClick = {this.props.onClick}>\r\n\t\t\t\t{this.props.contact.name}\r\n\t\t\t\t{/* {this.props.contact.phone}  */}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n} ","import React from 'react'\r\n\r\nexport default class ContactDetail extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tisEdit: false,\r\n\t\t\tname: '',\r\n\t\t\tphone: ''\r\n\t\t}\r\n\t}\r\n\r\n\t// Edit 버튼 누를 때 발생 이벤트\r\n\thandleToggle = () => {\r\n\t\tif(!this.state.isEdit) {\t// Edit 버튼을 누르면\r\n\t\t\tthis.setState({\t\t\t\t\t// 기존 값 유지\r\n\t\t\t\tname: this.props.contact.name,\r\n\t\t\t\tphone: this.props.contact.phone\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.handleEdit()\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisEdit: !this.state.isEdit\r\n\t\t})\r\n\t}\r\n\r\n\thandleChange = (e) => {\r\n\t\tlet nextState = {};\r\n\t\tnextState[e.target.name] = e.target.value;\r\n\t\tthis.setState(nextState)\r\n\t}\r\n\r\n\thandleEdit = () => {\r\n\t\tthis.props.onEdit(this.state.name, this.state.phone)\r\n\t}\r\n\r\n\t// 엔터 누를 시 버튼 클릭 실행\r\n\thandleKeyPress = (e) => {\r\n\t\tif(e.charCode === 13) { // enter\r\n\t\t\tthis.handleToggle()\r\n\t\t}\r\n\t}\t\r\n\r\n\trender() {\r\n\t\t\r\n\t\tconst edit = (\r\n\t\t\t<div>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tplaceholder=\"name\"\r\n\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\tonKeyPress = {this.handleKeyPress}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\t\tplaceholder=\"phone\"\r\n\t\t\t\t\t\t\tvalue={this.state.phone}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\tonKeyPress = {this.handleKeyPress}\r\n\t\t\t\t\t/>\r\n\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t\r\n\t\tconst details = (\r\n\t\t\t<div>\r\n\t\t\t\t<p>{this.props.contact.name}</p>\r\n\t\t\t\t<p>{this.props.contact.phone}</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t\tconst view = this.state.isEdit ? edit : details\r\n\t\tconst blank = (<div>Not Selected</div>)\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Details</h2>\r\n\t\t\t\t{this.props.isSelected ? view : blank}\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<button onClick = {this.handleToggle}>\r\n\t\t\t\t\t\t{this.state.isEdit ? 'OK' : 'Edit'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button onClick = {this.props.onRemove} >Remove</button>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nContactDetail.defaultProps = {\r\n\tcontact: {\r\n\t\tname: '',\r\n\t\tphone: ''\r\n\t},\r\n\tonRemove: () => {console.error('onRemove not defined')},\r\n\tonEdit: () => {console.error('onEdit not defined')}\r\n}","import React from 'react';\r\n\r\nexport default class ContactCreate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            phone: ''\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState)\r\n    }\r\n\r\n    handleClick = () => {\r\n        const contact = {\r\n            name: this.state.name,\r\n            phone: this.state.phone\r\n        };\r\n\r\n        this.props.onCreate(contact);\r\n\r\n        this.setState({\r\n            name: '',\r\n            phone: ''\r\n        });\r\n\t\t}\r\n\t\t\r\n\t\t// 엔터 누를 시 버튼 클릭 실행\r\n\t\thandleKeyPress = (e) => {\r\n\t\t\tif(e.charCode === 13) { // enter\r\n\t\t\t\tthis.handleClick()\r\n\t\t\t}\r\n\t\t}\t\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Create Contact</h2>\r\n                <p>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"name\"\r\n                        value={this.state.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress = {this.handleKeyPress}\r\n                    />\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"phone\"\r\n                        placeholder=\"phone\"\r\n                        value={this.state.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress = {this.handleKeyPress}\r\n                    />\r\n                </p>\r\n                <button onClick={this.handleClick}>Create</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContactCreate.defaultProps = {\r\n    onCreate: () => { console.error('onCreate not defined'); }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Template = styled.div`\r\n  width: 512px;\r\n  height: 768px;\r\n\r\n  position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n  margin: 0 auto; /* 페이지 중앙에 나타나도록 설정 */\r\n\r\n  margin-top: 96px;\r\n  margin-bottom: 32px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nfunction TemplateFunc({ children }) {\r\n  return <Template>{children}</Template>;\r\n}\r\n\r\nexport default TemplateFunc;","import React from 'react';\r\nimport ContactInfo from './ContactInfo'\r\nimport ContactDetails from './ContactDetail'\r\nimport Contacts from './Contact.json'\r\nimport update from 'react-addons-update'\r\nimport ContactCreate from './contactCreate'\r\nimport Template from './Template'\r\n\r\nexport default class Contact extends React.Component {\r\n\t// state 초기화\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tselectedKey: -1,\r\n\t\t\tkeyword: '',\r\n\t\t\tContactData: [{\r\n\t\t\t\t\tname: \"peach\",\r\n\t\t\t\t\tphone: \"010-2345-2314\" },\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"egg\",\r\n\t\t\t\t\tphone: \"010-3424-2433\" },\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"tree\",\r\n\t\t\t\t\tphone: \"010-3425-3423\"\r\n\t\t\t\t}]\r\n\t\t}\r\n\t}\r\n\t\r\n\t// input에 글 입력시 발생\r\n\thandleChange= (e) => {\t// e는 이벤트 객체\r\n\t\tthis.setState({\r\n\t\t\tkeyword: e.target.value\t// e.target: event가 전달한 객체에 대한 참조\r\n\t\t})\r\n\t\tconsole.log(e.target.value,' is entered')\r\n\t}\r\n\t// 이름 클릭시 발생하는 메소드\r\n\thandleSelect = (key) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedKey : key\r\n\t\t})\r\n\t\tconsole.log(key,' is selected')\r\n\t\t//console.log(this.state.selectedKey, ' :selected KEY')\r\n\t}\r\n\r\n\t// 주소록 추가\r\n\thandleCreate = (contact) => {\r\n\t\tthis.setState({\r\n\t\t\tContactData: update(this.state.ContactData, { $push: [contact] })\r\n\t\t})\r\n\t}\r\n\r\n\t// 주소록 삭제\r\n\thandelRemove= () => {\r\n\t\tif(this.state.selectedKey === -1) {\t// 아무것도 누르지 않으면 함수 실행x\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tContactData: update(this.state.ContactData,\r\n\t\t\t\t{ $splice: [[this.state.selectedKey,1]]} // 선택한 셀렉트키(index)값 삭제 ex) $splice [0,1]: 배열의 0번째 삭제\r\n\t\t\t\t),\r\n\t\t\t\tselectedKey: -1 // 다시 초기화\r\n\t\t})\r\n\t}\r\n\r\n\t// 주소록 수정\r\n\thandleEdit = (name, phone) => {\r\n\t\tthis.setState({\r\n\t\t\tContactData: update(this.state.ContactData,\r\n\t\t\t\t{\t\r\n\t\t\t\t\t\t// 몇 번째 배열의 값을 수정하겠다\r\n\t\t\t\t\t\t[this.state.selectedKey]: {\r\n\t\t\t\t\t\t\tname: { $set: name },\r\n\t\t\t\t\t\t\tphone: { $set: phone }\r\n\t\t\t\t\t\t}}\r\n\t\t\t)})\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\t// data는 ContactData 배열\r\n\t\tconst varmap = (data) => {\r\n\t\t\t// 알파벳 순서대로 정렬\r\n\t\t\tdata.sort((a,b) => {return a.name < b.name ? -1 : a.name > b.name ? 1 : 0})\r\n\t\t\tdata = data.filter(\r\n\t\t\t\t(contact) => {\r\n\t\t\t\t\t// indexOf(): 주어진 값과 일치하는 첫 번째 인덱스를 반환\r\n\t\t\t\t\t// 일치하는 값이 없으면 -1을 반환\r\n\t\t\t\t\treturn contact.name.toLowerCase()\r\n\t\t\t\t\t.indexOf(this.state.keyword.toLowerCase()) > -1\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn data.map((Contact, i) => {\r\n\t\t\t\t// ContactInfo 렌더링\r\n\t\t\t\treturn (<ContactInfo contact = {Contact} \r\n\t\t\t\t\t\t\t\tkey = {i}\t// index\r\n\t\t\t\t\t\t\t\t// onclick 함수가 ContactInfo에게 props로 전달\r\n\t\t\t\t\t\t\t\tonClick = {()=> this.handleSelect(i)}\t// css 문법은 렌더링의 return, <div> 안에서만 사용 가능\r\n\t\t\t\t\t\t/>)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Template>\r\n\t\t\t\t<h1>Contact</h1>\r\n\t\t\t\t<input \r\n\t\t\t\t\tname = \"keyword\"\r\n\t\t\t\t\tplaceholder = \"search\"\r\n\t\t\t\t\tvalue = {this.state.keyword}\r\n\t\t\t\t\tonChange = {this.handleChange}\t// input의 텍스트 값이 바뀔 때마다 발생하는 이벤트\r\n\t\t\t\t/> \r\n\t\t\t\t{varmap(this.state.ContactData)}\r\n\r\n\t\t\t\t{/* 선택 되었을 시 디테일한 정보 보여줌*/}\r\n\t\t\t\t<ContactDetails\r\n\t\t\t\t\t// ContactDetail에 isSelected 라는 porps 전달, \r\n\t\t\t\t\t// 선택이 되었으면 -1이 아니므로 isSelected에 참을 전달\r\n\t\t\t\t\t// selectedKey에는 key값(index)이 들어감\r\n\t\t\t\t\tisSelected = {this.state.selectedKey !== -1} \r\n\t\t\t\t\t// contact에 ContactData[i] 데이터가 저장\r\n\t\t\t\t\tcontact = {this.state.ContactData[this.state.selectedKey]}\r\n\t\t\t\t\tonRemove = {this.handelRemove}\r\n\t\t\t\t\tonEdit = {this.handleEdit}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ContactCreate onCreate = {this.handleCreate}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</Template>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App, Counter} from './App';\nimport Contact from './Contact'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n\n\t<Contact></Contact>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}